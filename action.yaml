name: 'Build Image'
description: 'Build image from dockerfile'
inputs:
  ecr-repository:  # id of input
    description: 'ECR repository'
    required: true
  image-tag:  # id of input
    description: 'Image TAG'
    required: true
  pypi-user:
    description: 'PyPi user'
    required: true
  pypi-password:
    description: 'PyPi password'
    required: true
  microservice-state:
    description: 'State'
    required: false
    default: ''
outputs:
  imageTag:
    description: "Image TAG"
    value: ${{ steps.build_image.outputs.image-tag }}

runs:
  using: "composite"
  steps:
    ## Clone do código
    - name: Check out code
      uses: actions/checkout@v2
        
    ## Fazendo login no AWS ECR
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
    
    ## Fazendo build da imagem da aplicação e armazenando no ECR
    - name: Build, tag, and push image to Amazon ECR
      id: build_image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ inputs.ecr-repository }}
        IMAGE_TAG: ${{ inputs.image-tag }}
        PYPI_USER: ${{ inputs.pypi-user }}
        PYPI_PASSWORD: ${{ inputs.pypi-password }}
        MICROSERVICE_STATE: ${{ inputs.microservice-state }}
      shell: bash
      run: |
        aws ecr describe-repositories --repository-names $ECR_REPOSITORY || aws ecr create-repository --image-scanning-configuration scanOnPush=true --repository-name $ECR_REPOSITORY
        echo "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"allow-staging-account-pull\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::901943060028:root\"},\"Action\":[\"ecr:BatchCheckLayerAvailability\",\"ecr:BatchGetImage\",\"ecr:DescribeImages\",\"ecr:DescribeRepositories\",\"ecr:GetDownloadUrlForLayer\",\"ecr:GetLifecyclePolicy\",\"ecr:GetLifecyclePolicyPreview\",\"ecr:GetRepositoryPolicy\",\"ecr:ListImages\"]}]}" > ecr-repository-policy.json
        aws ecr set-repository-policy --repository-name $ECR_REPOSITORY --policy-text file://ecr-repository-policy.json
        docker build --build-arg PYPI_USER=$PYPI_USER --build-arg PYPI_PASSWORD=$PYPI_PASSWORD --build-arg STATE=$MICROSERVICE_STATE -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image-repo::$ECR_REGISTRY/$ECR_REPOSITORY"
        echo "::set-output name=image-tag::$IMAGE_TAG"
